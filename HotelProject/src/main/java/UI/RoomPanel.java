
package UI;

import Classes.Room;
import Classes.RoomType;
import DB_Classes.DatabaseOperation;
import DB_Classes.RoomDb;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import DB_Classes.Select;
import java.awt.Component;
import javax.swing.JTabbedPane;


public class RoomPanel extends javax.swing.JDialog {

    /**
     * Creates new form RoomPanel
     */
    
    RoomType roomType = new RoomType();
    Room room = new Room("");
    
    ResultSet result;
    ArrayList<String> roomClass = new ArrayList<>();
    
    //DatabaseOperation db = new DatabaseOperation();
    RoomDb roomdb = new RoomDb();
    public RoomPanel(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.getContentPane().setBackground(new Color(241,241,242));
        populateCombo();
        populateRoomTable();
        populateRoomTypeTable();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabbedPane = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_rooms = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        check_phone = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        tf_roomNo = new javax.swing.JTextField();
        combo_roomType = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        btn_edit = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        check_tv = new javax.swing.JCheckBox();
        check_wifi = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        check_stove = new javax.swing.JCheckBox();
        tf_roomID = new javax.swing.JTextField();
        btn_delete = new javax.swing.JButton();
        btn_add = new javax.swing.JButton();
        tf_beds = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        tf_typeid = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        btn_statistics = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        btn_addRoomType = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        btn_deleteRoomType = new javax.swing.JButton();
        tf_roomType = new javax.swing.JTextField();
        tf_price = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btn_editRoomType = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        tf_roomTypeID = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_roomType = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        btn_statistics1 = new javax.swing.JButton();
        closeButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Room Panel");
        setBackground(new java.awt.Color(245, 221, 204));
        setMinimumSize(new java.awt.Dimension(1400, 800));

        tabbedPane.setBackground(new java.awt.Color(245, 221, 204));
        tabbedPane.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabbedPaneStateChanged(evt);
            }
        });
        tabbedPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabbedPaneMouseClicked(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(245, 221, 204));
        jPanel1.setPreferredSize(new java.awt.Dimension(1400, 800));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        table_rooms.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "room_id", "room_no", "bed_number", "tv", "wifi", "stove", "phone", "room_class", "room_class_id"
            }
        ));
        table_rooms.setToolTipText("");
        table_rooms.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_roomsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_rooms);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(556, 234, 677, 466));

        jPanel4.setBackground(new java.awt.Color(245, 221, 204));
        jPanel4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(144, 52, 43), 2, true));

        check_phone.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        check_phone.setText("Phone Service");

        jLabel3.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel3.setText("Beds");

        tf_roomNo.setToolTipText("String");

        combo_roomType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_roomTypeActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel1.setText("Room ID");

        btn_edit.setBackground(new java.awt.Color(218, 132, 108));
        btn_edit.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        btn_edit.setForeground(new java.awt.Color(255, 255, 255));
        btn_edit.setText("Edit Room");
        btn_edit.setEnabled(false);
        btn_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel6.setText("Category");

        check_tv.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        check_tv.setText("TV");

        check_wifi.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        check_wifi.setText("WIFI");
        check_wifi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check_wifiActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel2.setText("Room No");

        check_stove.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        check_stove.setText("Stove");
        check_stove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check_stoveActionPerformed(evt);
            }
        });

        tf_roomID.setEditable(false);
        tf_roomID.setBackground(new java.awt.Color(227, 188, 161));
        tf_roomID.setToolTipText("Auto Generated");

        btn_delete.setBackground(new java.awt.Color(218, 132, 108));
        btn_delete.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        btn_delete.setForeground(new java.awt.Color(255, 255, 255));
        btn_delete.setText("Delete Room");
        btn_delete.setEnabled(false);
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        btn_add.setBackground(new java.awt.Color(218, 132, 108));
        btn_add.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        btn_add.setForeground(new java.awt.Color(255, 255, 255));
        btn_add.setText("Add Room");
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });

        tf_beds.setToolTipText("Digits Only");
        tf_beds.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_bedsActionPerformed(evt);
            }
        });
        tf_beds.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_bedsKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel8.setText("Type ID");

        tf_typeid.setBackground(new java.awt.Color(227, 188, 161));
        tf_typeid.setToolTipText("click here to get the id of the chosen room type");
        tf_typeid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tf_typeidMouseClicked(evt);
            }
        });
        tf_typeid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_typeidActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(combo_roomType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tf_roomID)
                                .addComponent(tf_roomNo)
                                .addComponent(tf_beds, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(24, 24, 24)
                            .addComponent(tf_typeid, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(check_wifi, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(check_stove, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(check_tv, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(check_phone)))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btn_add, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tf_roomID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tf_roomNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tf_beds, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(combo_roomType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(tf_typeid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(check_tv)
                    .addComponent(check_phone))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(check_stove)
                    .addComponent(check_wifi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(btn_add, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(252, 234, -1, -1));

        jButton1.setBackground(new java.awt.Color(218, 132, 108));
        jButton1.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(133, 234, -1, 39));

        jButton3.setBackground(new java.awt.Color(218, 132, 108));
        jButton3.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Reset");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(133, 279, 77, 39));

        jButton4.setBackground(new java.awt.Color(218, 132, 108));
        jButton4.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        jButton4.setText("Customer Info");
        jButton4.setToolTipText("Customer Info");
        jButton4.setAlignmentY(0.0F);
        jButton4.setAutoscrolls(true);
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setMargin(new java.awt.Insets(2, 15, 15, 14));
        jButton4.setMaximumSize(new java.awt.Dimension(180, 100));
        jButton4.setMinimumSize(new java.awt.Dimension(180, 100));
        jButton4.setPreferredSize(new java.awt.Dimension(180, 100));
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(581, 45, 235, -1));

        jButton5.setBackground(new java.awt.Color(218, 132, 108));
        jButton5.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        jButton5.setText("Control Panel");
        jButton5.setToolTipText("Room Info");
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setMargin(new java.awt.Insets(2, 15, 15, 14));
        jButton5.setMaximumSize(new java.awt.Dimension(121, 100));
        jButton5.setMinimumSize(new java.awt.Dimension(121, 100));
        jButton5.setPreferredSize(new java.awt.Dimension(121, 100));
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(312, 45, 251, -1));

        btn_statistics.setBackground(new java.awt.Color(218, 132, 108));
        btn_statistics.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        btn_statistics.setText("Statistics");
        btn_statistics.setToolTipText("Room Info");
        btn_statistics.setFocusable(false);
        btn_statistics.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_statistics.setMargin(new java.awt.Insets(2, 15, 15, 14));
        btn_statistics.setMaximumSize(new java.awt.Dimension(121, 100));
        btn_statistics.setMinimumSize(new java.awt.Dimension(121, 100));
        btn_statistics.setPreferredSize(new java.awt.Dimension(121, 100));
        btn_statistics.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_statistics.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_statisticsActionPerformed(evt);
            }
        });
        jPanel1.add(btn_statistics, new org.netbeans.lib.awtextra.AbsoluteConstraints(834, 45, 175, -1));

        closeButton.setBackground(new java.awt.Color(144, 52, 43));
        closeButton.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        closeButton.setForeground(new java.awt.Color(255, 255, 255));
        closeButton.setText("Exit");
        closeButton.setToolTipText("");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });
        jPanel1.add(closeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1680, 9, 60, -1));

        tabbedPane.addTab("Room Information", jPanel1);

        jPanel2.setBackground(new java.awt.Color(245, 221, 204));
        jPanel2.setPreferredSize(new java.awt.Dimension(1400, 800));

        jPanel3.setBackground(new java.awt.Color(245, 221, 204));
        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(144, 52, 43), 2, true));

        btn_addRoomType.setBackground(new java.awt.Color(218, 132, 108));
        btn_addRoomType.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        btn_addRoomType.setForeground(new java.awt.Color(255, 255, 255));
        btn_addRoomType.setText("Add Room Class");
        btn_addRoomType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addRoomTypeActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel5.setText("Price");

        btn_deleteRoomType.setBackground(new java.awt.Color(218, 132, 108));
        btn_deleteRoomType.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        btn_deleteRoomType.setForeground(new java.awt.Color(255, 255, 255));
        btn_deleteRoomType.setText("Delete Room Class");
        btn_deleteRoomType.setEnabled(false);
        btn_deleteRoomType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteRoomTypeActionPerformed(evt);
            }
        });

        tf_roomType.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N

        tf_price.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        tf_price.setToolTipText("Digits Only");
        tf_price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_priceKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel4.setText("Room Type");

        btn_editRoomType.setBackground(new java.awt.Color(218, 132, 108));
        btn_editRoomType.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        btn_editRoomType.setForeground(new java.awt.Color(255, 255, 255));
        btn_editRoomType.setText("Edit Room Class");
        btn_editRoomType.setEnabled(false);
        btn_editRoomType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editRoomTypeActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel7.setText("Room Type ID");

        tf_roomTypeID.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        tf_roomTypeID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_roomTypeIDKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btn_editRoomType, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_addRoomType, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_deleteRoomType, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(tf_roomType, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(tf_price, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(tf_roomTypeID, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tf_roomTypeID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tf_roomType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(tf_price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addComponent(btn_addRoomType, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_editRoomType, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_deleteRoomType, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );

        table_roomType.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "room_type", "price", "room_type_id"
            }
        ));
        table_roomType.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_roomTypeMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(table_roomType);

        jButton2.setBackground(new java.awt.Color(218, 132, 108));
        jButton2.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Reset");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(218, 132, 108));
        jButton6.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        jButton6.setText("Control Panel");
        jButton6.setToolTipText("Room Info");
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setMargin(new java.awt.Insets(2, 15, 15, 14));
        jButton6.setMaximumSize(new java.awt.Dimension(121, 100));
        jButton6.setMinimumSize(new java.awt.Dimension(121, 100));
        jButton6.setPreferredSize(new java.awt.Dimension(121, 100));
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(218, 132, 108));
        jButton7.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        jButton7.setText("Customer Info");
        jButton7.setToolTipText("Customer Info");
        jButton7.setAlignmentY(0.0F);
        jButton7.setAutoscrolls(true);
        jButton7.setFocusable(false);
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.setMargin(new java.awt.Insets(2, 15, 15, 14));
        jButton7.setMaximumSize(new java.awt.Dimension(180, 100));
        jButton7.setMinimumSize(new java.awt.Dimension(180, 100));
        jButton7.setPreferredSize(new java.awt.Dimension(180, 100));
        jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        btn_statistics1.setBackground(new java.awt.Color(218, 132, 108));
        btn_statistics1.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        btn_statistics1.setText("Statistics");
        btn_statistics1.setToolTipText("Room Info");
        btn_statistics1.setFocusable(false);
        btn_statistics1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_statistics1.setMargin(new java.awt.Insets(2, 15, 15, 14));
        btn_statistics1.setMaximumSize(new java.awt.Dimension(121, 100));
        btn_statistics1.setMinimumSize(new java.awt.Dimension(121, 100));
        btn_statistics1.setPreferredSize(new java.awt.Dimension(121, 100));
        btn_statistics1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_statistics1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_statistics1ActionPerformed(evt);
            }
        });

        closeButton1.setBackground(new java.awt.Color(144, 52, 43));
        closeButton1.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        closeButton1.setForeground(new java.awt.Color(255, 255, 255));
        closeButton1.setText("Exit");
        closeButton1.setToolTipText("");
        closeButton1.setFocusPainted(false);
        closeButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(122, 122, 122)
                                .addComponent(jButton2)
                                .addGap(107, 107, 107)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(90, 90, 90)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(309, 309, 309)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn_statistics1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 572, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(closeButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(closeButton1)
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_statistics1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 225, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(105, 105, 105))
        );

        tabbedPane.addTab("Room Class", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPane)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_addRoomTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addRoomTypeActionPerformed
                                                
        // Check if there are any empty required fields
        if (!isAnyRequiredRoomTypeFieldEmpty()) {
            // Create a new RoomType object with information provided in the fields
            roomTypeObjectCreation();
            // Insert the new RoomType object into the database
            roomdb.insertRoomType(roomType);
            // Update the room table with the new RoomType object
            populateRoomTable();
            // Update the Room Type table with the new RoomType object
            populateRoomTypeTable();
        }
        else{
            // If there are any empty required fields, display an error message
            JOptionPane.showMessageDialog(null, "All the fields should be filled");
        }
  

    }//GEN-LAST:event_btn_addRoomTypeActionPerformed
    private boolean isAnyRequiredRoomTypeFieldEmpty() {
        return tf_roomTypeID.getText().equals("") || tf_price.getText().equals("");
    }
    private void populateCombo()
{
    try {
        // Get the room types from the database using the roomdb object
        ResultSet rs = roomdb.getRoomType();
        
        // Loop through each room type retrieved from the database
        while(rs.next())
        {
            // Add the room type to the roomClass array list
            roomClass.add(rs.getString("type"));
            
            // Add the room type to the combo_box_roomType combo box
            combo_roomType.addItem(rs.getString("type"));
        }
    } catch (SQLException ex) {
        // Display an error message if an exception occurs
        JOptionPane.showMessageDialog(this, "Combo Fillup failed");
    }
}

    
    private void populateRoomTypeTable() {
    try {
        // Retrieve data from roomtype table
        ResultSet rs = Select.getData("select * from roomtype ");
        // Get the model of the table_roomType JTable
        DefaultTableModel model = (DefaultTableModel) table_roomType.getModel();
        // Clear any previous data by setting row count to zero
        model.setRowCount(0);
        // Loop through the ResultSet and add each row of data to the JTable model
        while (rs.next()) {
            model.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(3)});
        }
        rs.close();
    } catch (Exception e) {
        // Display error message if any exception occurs
        JOptionPane.showMessageDialog(null, e);
    }
}

private void populateRoomTable() {
    try {
        // Retrieve data from room table
        ResultSet rs = Select.getData("select * from room ");
        // Get the model of the table_rooms JTable
        DefaultTableModel model = (DefaultTableModel) table_rooms.getModel();
        // Clear any previous data by setting row count to zero
        model.setRowCount(0);
        // Loop through the ResultSet and add each row of data to the JTable model
        while (rs.next()) {
            model.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), 
                rs.getString(5), rs.getString(6), rs.getString(7), rs.getString(8), rs.getString(9)});
        }
        rs.close();
    } catch (Exception e) {
        // Display error message if any exception occurs
        JOptionPane.showMessageDialog(null, e);
    }
}

    private void tf_priceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_priceKeyTyped
        char c = evt.getKeyChar();
        
        if(!(Character.isDigit(c) ))
        {
            evt.consume();
        }
    }//GEN-LAST:event_tf_priceKeyTyped

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        if (!isAnyRequiredFieldEmpty()) {  // Check if all required fields are filled
     try {
         roomObjectCreation();  // Create a new room object
     } catch (SQLException ex) {
         // If an SQL exception is caught, log it with the SEVERE level
         Logger.getLogger(RoomPanel.class.getName()).log(Level.SEVERE, null, ex);
     }
     roomdb.insertRoom(room);  // Insert the new room into the database
     populateRoomTable();  // Update the table that displays rooms
     clearRoomPanel();  // Clear the form for adding a new room

     //System.out.println(combo_roomType.getSelectedItem().toString());
 } else {
     // If any required fields are empty, display an error message
     JOptionPane.showMessageDialog(null, "All the fields should be filled");
 }

   
    }//GEN-LAST:event_btn_addActionPerformed
    private boolean isAnyRequiredFieldEmpty() {
        return tf_roomNo.getText().equals("") || tf_beds.getText().equals("") || combo_roomType.getSelectedItem()==null ||tf_typeid.getText().equals("");
    }
    private void btn_editRoomTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editRoomTypeActionPerformed
        
        
         // check if any required field is empty
        if (!isAnyRequiredRoomTypeFieldEmpty()) {
            // create a new room type object
            roomTypeObjectCreation();
            // update the room type in the database
            roomdb.updateRoomType(roomType);
            // populate the room type table with updated data
            populateRoomTypeTable();
            // clear the room type panel for new input
            clearRoomTypePanel();
            // enable the "Add Room Type" button
            btn_addRoomType.setEnabled(true);
            // disable the "Edit Room Type" and "Delete Room Type" buttons
            btn_editRoomType.setEnabled(false);
            btn_deleteRoomType.setEnabled(false);
        } else {
            // if any required field is empty, show an error message
            JOptionPane.showMessageDialog(null, "All the fields should be filled");
        }
        
    }//GEN-LAST:event_btn_editRoomTypeActionPerformed

    private void table_roomTypeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_roomTypeMouseClicked
        roomType = new RoomType();
        int row = table_roomType.getSelectedRow();
        displayToTextField(row);
        btn_addRoomType.setEnabled(false);
        btn_editRoomType.setEnabled(true);
        btn_deleteRoomType.setEnabled(true);
    }//GEN-LAST:event_table_roomTypeMouseClicked

    private void table_roomsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_roomsMouseClicked
        room = new Room(null);
    
        // Enable the edit and delete buttons and disable the add button
        btn_edit.setEnabled(true);
        btn_delete.setEnabled(true);
        btn_add.setEnabled(false);

        // Get the selected row from the rooms table
        int row = table_rooms.getSelectedRow();

        // Display the data from the selected row in the room text fields
        displayToRoomTextField(row);
       
        
    }//GEN-LAST:event_table_roomsMouseClicked

    private void btn_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editActionPerformed
        if (!isAnyRequiredFieldEmpty()) { // Check if any required field is empty
    try {
        roomObjectCreation(); // Create a new room object based on the user input
    } catch (SQLException ex) {
        Logger.getLogger(RoomPanel.class.getName()).log(Level.SEVERE, null, ex); // Log any exceptions
    }
    roomdb.updateRoom(room); // Update the room's information in the database
    populateRoomTable(); // Update the room table on the UI
    clearRoomPanel(); // Clear the input fields on the UI
    btn_add.setEnabled(true); // Enable the "Add" button on the UI
} else {
    JOptionPane.showMessageDialog(null, "All the fields should be filled"); // Show an error message if any required field is empty
}

    }//GEN-LAST:event_btn_editActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        // Display a confirmation dialog box to the user and store the user's response in 'a'
        int a = JOptionPane.showConfirmDialog(null, "Do You Really Want To Go To Delete This Room From The Database ? ", "Select an option", JOptionPane.YES_NO_OPTION);

        // If the user clicked "Yes" (value of 0), then delete the room and update the table
        if (a == 0) {
            // Get the room ID from the text field and convert it to an integer
            int roomId = Integer.parseInt(tf_roomID.getText());

            // Delete the room from the database using the room ID
            roomdb.deleteRoom(roomId);

            // Update the room table to reflect the deletion
            populateRoomTable();

            // Clear the room panel
            clearRoomPanel();

            // Enable the "Add" button to allow adding of new rooms
            btn_add.setEnabled(true);
        }
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        
        dispose();
        RoomPanel dialog = new RoomPanel(new javax.swing.JFrame(), true);
        dialog.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btn_deleteRoomTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteRoomTypeActionPerformed
         // Display a confirmation dialog to the user and get their response
        int a = JOptionPane.showConfirmDialog(null, "Do You Really Want To Go To Delete This Room Type From The Database ? ", "Select an option", JOptionPane.YES_NO_OPTION);

        // If the user selects "yes"
        if (a == 0) {
            // Get the ID of the room type from the text field
            int roomTypeId = Integer.parseInt(tf_roomTypeID.getText());

            // Delete the room type from the database
            roomdb.deleteRoomType(roomTypeId);

            // Refresh the table of rooms
            populateRoomTable();

            // Refresh the table of room types
            populateRoomTypeTable();

            // Clear the panel for adding/editing room types
            clearRoomTypePanel();

            // Enable the button for adding a new room type
            btn_addRoomType.setEnabled(true);
    }
    }//GEN-LAST:event_btn_deleteRoomTypeActionPerformed

    private void check_wifiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_check_wifiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_check_wifiActionPerformed

    private void check_stoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_check_stoveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_check_stoveActionPerformed

    private void tf_typeidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_typeidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_typeidActionPerformed

    private void combo_roomTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_roomTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_roomTypeActionPerformed

    private void tf_typeidMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tf_typeidMouseClicked
        // Get the selected room type from the combo box
    String type = (String) combo_roomType.getSelectedItem();

    // If no room type is selected, show an error message
    if (type.equals("")) {
        JOptionPane.showMessageDialog(null, "Select an item from the combobox first !!");
    } else {
        // Get the type ID from the database and set the text of tf_typeid
        int type_id = roomdb.get_type_id(type);
        tf_typeid.setText(Integer.toString(type_id));
    }
        
    }//GEN-LAST:event_tf_typeidMouseClicked

    private void tf_bedsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_bedsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_bedsActionPerformed

    private void tf_bedsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_bedsKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c))
        {
            evt.consume();
        }
        
    }//GEN-LAST:event_tf_bedsKeyTyped

    private void tf_roomTypeIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_roomTypeIDKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c))
        {
            evt.consume();
        }
    }//GEN-LAST:event_tf_roomTypeIDKeyTyped

    private void tabbedPaneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabbedPaneStateChanged
        // Get the selected index of the tabbed pane
        int selectedIndex = tabbedPane.getSelectedIndex();

        // Get the panel at the selected index
        Component selectedPanel = tabbedPane.getComponentAt(selectedIndex);

        // Refresh the panel
        selectedPanel.invalidate();
        selectedPanel.validate();
        selectedPanel.repaint();
       

    }//GEN-LAST:event_tabbedPaneStateChanged

    private void tabbedPaneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabbedPaneMouseClicked
        // Get the selected index of the tabbed pane
        int selectedIndex = tabbedPane.getSelectedIndex();

        // Get the panel at the selected index
        Component selectedPanel = tabbedPane.getComponentAt(selectedIndex);

        // Refresh the panel
        selectedPanel.invalidate();
        selectedPanel.validate();
        selectedPanel.repaint();

    }//GEN-LAST:event_tabbedPaneMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       clearRoomTypePanel();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        clearRoomPanel();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        dispose();
        CustomerPanel c = new CustomerPanel();
        c.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        dispose();
        ControlPanel c = new ControlPanel();
        c.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void btn_statisticsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_statisticsActionPerformed
        // TODO add your handling code here:
        dispose();
        StatisticsPanel s = new StatisticsPanel();
        s.setVisible(true);
    }//GEN-LAST:event_btn_statisticsActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        dispose();
        ControlPanel c = new ControlPanel();
        c.setVisible(true);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        dispose();
        CustomerPanel c = new CustomerPanel();
        c.setVisible(true);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void btn_statistics1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_statistics1ActionPerformed
        dispose();
        StatisticsPanel s = new StatisticsPanel();
        s.setVisible(true);
    }//GEN-LAST:event_btn_statistics1ActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        // TODO add your handling code here:
        int a = JOptionPane.showConfirmDialog(null, "Do You Really Want To Close the Application ? ", "Select an option", JOptionPane.YES_NO_OPTION);
        if (a==0)
        {
            System.exit(0);
        }
    }//GEN-LAST:event_closeButtonActionPerformed

    private void closeButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_closeButton1ActionPerformed

    private void clearRoomPanel()
    {
        
        room = new Room(null);
        tf_beds.setText("");
        tf_price.setText("");
        tf_roomID.setText("");
        tf_roomNo.setText("");
        tf_roomType.setText("");
        tf_typeid.setText("");
        table_rooms.clearSelection();
        check_stove.setSelected(false);
        check_phone.setSelected(false);
        check_tv.setSelected(false);
        check_wifi.setSelected(false);
        combo_roomType.setSelectedIndex(0);
        tf_roomTypeID.setText("");
        
        btn_add.setEnabled(true);
        btn_edit.setEnabled(false);
        btn_delete.setEnabled(false);
   
    }
    
    private void clearRoomTypePanel()
    {
        roomType = new RoomType();
        tf_roomType.setText("");
        tf_price.setText("");
        tf_roomTypeID.setText("");
        btn_addRoomType.setEnabled(true);
        btn_editRoomType.setEnabled(false);
        btn_deleteRoomType.setEnabled(false);
        
    }
    
       private void displayToRoomTextField(int row)
     {
         // Retrieves room data from the selected row in the table and displays it in the corresponding text fields
         tf_roomID.setText(table_rooms.getModel().getValueAt(row, 0) + "");
         tf_roomNo.setText(table_rooms.getModel().getValueAt(row, 1) + "");
         tf_beds.setText(table_rooms.getModel().getValueAt(row, 2) + "");
         check_tv.setSelected((table_rooms.getModel().getValueAt(row, 3) + "").equals("1") ? true : false);
         check_wifi.setSelected((table_rooms.getModel().getValueAt(row, 4) + "").equals("1") ? true : false);
         check_stove.setSelected((table_rooms.getModel().getValueAt(row, 5) + "").equals("1") ? true : false);
         check_phone.setSelected((table_rooms.getModel().getValueAt(row, 6) + "").equals("1") ? true : false);
         int selectedIndex = getComboSearchIndex(table_rooms.getModel().getValueAt(row, 7) + "");  
         combo_roomType.setSelectedIndex(selectedIndex);
         tf_roomTypeID.setText(table_rooms.getModel().getValueAt(row, 8) + "");
     }

     private void displayToTextField(int row) {
         // Retrieves room type data from the selected row in the table and displays it in the corresponding text fields
         tf_roomType.setText(table_roomType.getModel().getValueAt(row, 0) + "");
         tf_price.setText(table_roomType.getModel().getValueAt(row, 1) + "");
         tf_roomTypeID.setText(table_roomType.getModel().getValueAt(row, 2) + "");
     }

     private int getComboSearchIndex(String item)
     {
         // Searches for the index of the selected room class in the combo box
         for (int i = 0; i < roomClass.size(); i++)
         {
             if (item.equals(roomClass.get(i)))
             {
                 return i;
             }
         }
         return -1;
     }

     private void roomObjectCreation() throws SQLException
     {
         // Creates a new Room object and sets its properties based on the current values of the GUI components
         room = new Room(null);
         room.setRoom_no(tf_roomNo.getText());
         room.setBed_number(Integer.parseInt(tf_beds.getText()));
         room.setHasTV(check_tv.isSelected());
         room.setHasWIFI(check_wifi.isSelected());
         room.setHasStove(check_stove.isSelected());
         room.setHasPhone(check_phone.isSelected());

         // Sets the RoomType object of the Room based on the selected item in the combo box and the room type ID text field
         room.setRoom_class(new RoomType());
         room.getRoom_class().setRoom_type(combo_roomType.getSelectedItem().toString());
         room.getRoom_class().setRoom_type_id(Integer.parseInt(tf_typeid.getText()));
         try
         {
             room.setRoom_id(Integer.parseInt(tf_roomID.getText()));
         }
         catch(Exception ex)
         {
             room.setRoom_id(-1);
         }
     }

     private void roomTypeObjectCreation()
     {
         // Creates a new RoomType object and sets its properties based on the current values of the GUI components
         roomType = new RoomType();
         roomType.setRoom_type_id(Integer.parseInt(tf_roomTypeID.getText()));
         roomType.setRoom_type(tf_roomType.getText());
         roomType.setPricePerDay(Integer.parseInt(tf_price.getText()));
     }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RoomPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RoomPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RoomPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RoomPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RoomPanel dialog = new RoomPanel(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_addRoomType;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_deleteRoomType;
    private javax.swing.JButton btn_edit;
    private javax.swing.JButton btn_editRoomType;
    private javax.swing.JButton btn_statistics;
    private javax.swing.JButton btn_statistics1;
    private javax.swing.JCheckBox check_phone;
    private javax.swing.JCheckBox check_stove;
    private javax.swing.JCheckBox check_tv;
    private javax.swing.JCheckBox check_wifi;
    private javax.swing.JButton closeButton;
    private javax.swing.JButton closeButton1;
    private javax.swing.JComboBox combo_roomType;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JTable table_roomType;
    private javax.swing.JTable table_rooms;
    private javax.swing.JTextField tf_beds;
    private javax.swing.JTextField tf_price;
    private javax.swing.JTextField tf_roomID;
    private javax.swing.JTextField tf_roomNo;
    private javax.swing.JTextField tf_roomType;
    private javax.swing.JTextField tf_roomTypeID;
    private javax.swing.JTextField tf_typeid;
    // End of variables declaration//GEN-END:variables

  
}
